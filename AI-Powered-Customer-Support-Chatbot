# ai_customer_chatbot.py
import streamlit as st
import pandas as pd
from textblob import TextBlob
from datetime import datetime

st.set_page_config(page_title="AI Customer Support Chatbot", layout="wide")
st.title("ðŸ¤– AI-Powered Customer Support Chatbot")

# -------------------------------
# Simulated Knowledge Base
# -------------------------------
knowledge_base = {
    "order_status": "You can check your order status in the 'My Orders' section of your account.",
    "refund": "Refunds are processed within 5-7 business days after request approval.",
    "shipping": "Standard shipping takes 3-5 business days. Expedited shipping is 1-2 days.",
    "payment": "We accept credit cards, debit cards, and PayPal."
}

# -------------------------------
# Analytics Logging
# -------------------------------
if 'chat_log' not in st.session_state:
    st.session_state.chat_log = []

# -------------------------------
# Intent Detection (Simple NLP)
# -------------------------------
def detect_intent(message):
    msg_lower = message.lower()
    if any(word in msg_lower for word in ["order", "status", "track"]):
        return "order_status"
    elif any(word in msg_lower for word in ["refund", "return"]):
        return "refund"
    elif any(word in msg_lower for word in ["ship", "delivery"]):
        return "shipping"
    elif any(word in msg_lower for word in ["pay", "payment", "card", "paypal"]):
        return "payment"
    else:
        return "unknown"

# -------------------------------
# Chat Interface
# -------------------------------
user_input = st.text_input("Ask your question:")

if st.button("Send"):
    if user_input.strip() != "":
        intent = detect_intent(user_input)
        response = knowledge_base.get(intent, "I'm sorry, I don't have an answer for that. We will get back to you.")
        
        # Save to chat log
        st.session_state.chat_log.append({
            "timestamp": datetime.now().strftime("%Y-%m-%d %H:%M:%S"),
            "user_message": user_input,
            "intent": intent,
            "bot_response": response
        })

# Display chat log
st.subheader("ðŸ’¬ Chat History")
for chat in st.session_state.chat_log[-10:]:  # show last 10 messages
    st.markdown(f"**You:** {chat['user_message']}")
    st.markdown(f"**Bot:** {chat['bot_response']}")
    st.markdown(f"*Intent Detected:* {chat['intent']}")
    st.markdown("---")

# -------------------------------
# Analytics Dashboard
# -------------------------------
st.subheader("ðŸ“Š Chatbot Analytics")
if st.session_state.chat_log:
    df = pd.DataFrame(st.session_state.chat_log)
    intent_counts = df['intent'].value_counts()
    st.bar_chart(intent_counts)
    st.dataframe(df[['timestamp', 'user_message', 'intent']].tail(10))
